# This workflow will build a Python wheel, a Docker image containing the CLI tool and publish both to PyPi and DockerHub

name: Build and publish

# Run only when pushing a Git version tag
on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

jobs:
  build-wheel:
    name: Build and publish Python package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'poetry'
    - name: Build wheel
      run: poetry build
    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: Python package
        path: dist/
        if-no-files-found: error
    - name: Publish wheel
      run: poetry publish
      continue-on-error: true  # TODO: only for testing

  docker-image:
    needs: build-wheel
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Download Python package
        uses: actions/download-artifact@v3
        with:
          name: Python package
          path: dist/

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            application_version: ${{ github.ref_name }}
          push: true
          platforms: linux/arm64,linux/amd64,linux/arm/v7
          tags: ${{ github.repository }}:${{ github.ref_name }},${{ github.repository }}:latest

